# This action sets up the environment with the required tech stack in order to build, install, and
# run Zeebe.

---
name: Setup Zeebe
description: Sets up the required stack to build, install, and run Zeebe

inputs:
  go:
    description: If true, will set up Golang; defaults to true
    required: false
    default: "true"
  java:
    description: If true, will set up Java; defaults to true
    required: false
    default: "true"
  java-version:
    description: The JDK version to setup
    default: "17"
    required: false
  maven-cache:
    description: A modifier key used to toggle the usage of a maven repo cache.
    default: "false"
    required: false
  maven-cache-key-modifier:
    description: A modifier key used for the maven cache, can be used to create isolated caches for certain jobs.
    default: "default"
    required: false
  secret_vault_address:
    description: 'secret vault url'
    required: false
  secret_vault_roleId:
    description: 'secret vault roleId'
    required: false
  secret_vault_secretId:
    description: 'secret valut secret id'
    required: false

outputs: {}

runs:
  using: composite
  steps:
    # We will fail the action if it's an internal PR without the secrets. If this occurs it
    # indicates a configuration failure that needs to be fixed.
    - name: Secrets check
      if: |
        github.event.name == 'pull_request'
        && github.event.pull_request.head.repo.full_name == 'camunda/zeebe'
        && (inputs.secret_vault_address == ''
        || inputs.secret_vault_roleId == ''
        || inputs.secret_vault_secretId == '')
      shell: bash
      run: exit 1
    - name: Import Secrets
      id: secrets
      uses: hashicorp/vault-action@v2.4.3
      if: |
        inputs.secret_vault_address != ''
        && inputs.secret_vault_roleId != ''
        && inputs.secret_vault_secretId != ''
      with:
        url: ${{ inputs.secret_vault_address }}
        method: approle
        roleId: ${{ inputs.secret_vault_roleId }}
        secretId: ${{ inputs.secret_vault_secretId }}
        secrets: |
          secret/data/products/zeebe/ci/zeebe ARTIFACTS_USR;
          secret/data/products/zeebe/ci/zeebe ARTIFACTS_PSW;
    - if: ${{ inputs.java == 'true' }}
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: ${{ inputs.java-version }}
        # if we run on arm64 set equivalent architecture as input, else default to x64
        # see https://docs.github.com/en/actions/learn-github-actions/contexts#runner-context
        architecture: ${{ runner.arch == 'ARM64' && 'aarch64' || 'x64' }}
    # Use CI Nexus as co-located pull-through cache for Maven artifacts via ~/.m2/settings.xml
    - name: 'Create settings.xml'
      uses: s4u/maven-settings-action@v2.8.0
      if: |
        inputs.secret_vault_address != ''
        && inputs.secret_vault_roleId != ''
        && inputs.secret_vault_secretId != ''
      with:
        githubServer: false
        servers: |
          [{
            "id": "camunda-nexus",
            "username": "${{ steps.secrets.outputs.ARTIFACTS_USR }}",
            "password": "${{ steps.secrets.outputs.ARTIFACTS_PSW }}"
          }]
        mirrors: '[{"url": "https://repository.nexus.camunda.cloud/content/groups/internal/", "id": "camunda-nexus", "mirrorOf": "zeebe,zeebe-snapshots", "name": "camunda Nexus"}]'
    - if: ${{ inputs.maven-cache == 'true' }}
      name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ inputs.maven-cache-key-modifier }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-${{ inputs.maven-cache-key-modifier }}-
    - if: ${{ inputs.go == 'true' }}
      uses: actions/setup-go@v3
      with:
        go-version-file: 'clients/go/go.mod'
        cache: true
        cache-dependency-path: 'clients/go/go.sum'
